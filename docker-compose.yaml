services:
  build:
    build: .
    image: wait4it-pipeline/docker:${PIPELINE_IMAGE_VERSION:-latest}

  redis:
    image: redis:latest

  postgres:
    image: postgres
    environment:
      POSTGRES_PASSWORD: postgres

  mysql:
    image: mysql
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: app

  nginx:
    image: nginx

  mongodb:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root

  rabbitmq:
    image: rabbitmq:3-management-alpine

  memcached:
    image: docker.io/bitnami/memcached:1

  elasticsearch:
      image: docker.io/bitnami/elasticsearch:8

  aerospike:
    image: aerospike/aerospike-server-enterprise

  kafka:
    image: bitnami/kafka:latest
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER

  test-redis:
    image: wait4it-pipeline/docker:${PIPELINE_IMAGE_VERSION:-latest}
    command: -type=redis -p=6379 -t=60 -h=redis
    depends_on:
      - build
      - redis

  test-tcp:
    image: wait4it-pipeline/docker:${PIPELINE_IMAGE_VERSION:-latest}
    command: -type=tcp -h=redis -p=6379 -t=60
    depends_on:
      - build
      - redis

  test-postgres:
    image: wait4it-pipeline/docker:${PIPELINE_IMAGE_VERSION:-latest}
    command: -type=postgres -h=postgres -p=5432 -t=60 -u=postgres -P=postgres -ssl=disable
    depends_on:
      - build
      - postgres

  test-password-file:
    image: wait4it-pipeline/docker:${PIPELINE_IMAGE_VERSION:-latest}
    command: -type=postgres -h=postgres -p=5432 -t=60 -u=postgres -Pf=/tmp/pg_pw.txt -ssl=disable
    volumes:
      - ./pg_pw.txt:/tmp/pg_pw.txt:ro
    depends_on:
      - build
      - postgres

  test-mysql:
    image: wait4it-pipeline/docker:${PIPELINE_IMAGE_VERSION:-latest}
    command: -type=mysql -h=mysql -p=3306 -t=60 -u=root -P=secret -n=app
    depends_on:
      - build
      - mysql

  test-http:
    image: wait4it-pipeline/docker:${PIPELINE_IMAGE_VERSION:-latest}
    command: -type=http -h=http://nginx/ -t=60 -status-code=200 -http-text="Welcome to nginx!"
    depends_on:
      - build
      - nginx

  test-mongodb:
    image: wait4it-pipeline/docker:${PIPELINE_IMAGE_VERSION:-latest}
    command: -type=mongo -p=27017 -t=60 -u=root -P=root -h=mongodb
    depends_on:
      - build
      - mongodb

  test-rabbitmq:
    image: wait4it-pipeline/docker:${PIPELINE_IMAGE_VERSION:-latest}
    command: -type=rabbitmq -p=5672 -t=60 -u=guest -P=guest -h=rabbitmq
    depends_on:
      - build
      - rabbitmq

  test-memcached:
    image: wait4it-pipeline/docker:${PIPELINE_IMAGE_VERSION:-latest}
    command: -type=memcached -h=memcached -p=11211 -t=60
    depends_on:
      - build
      - memcached

  test-elasticsearch:
    image: wait4it-pipeline/docker:${PIPELINE_IMAGE_VERSION:-latest}
    command: -type=elasticsearch -h=http://elasticsearch -p=9200 -t=60
    depends_on:
      - build
      - elasticsearch

  test-aerospike:
    image: wait4it-pipeline/docker:${PIPELINE_IMAGE_VERSION:-latest}
    command: -type=aerospike -h=aerospike -p=3000 -t=60
    depends_on:
      - build
      - aerospike

  test-kafka:
    image: wait4it-pipeline/docker:${PIPELINE_IMAGE_VERSION:-latest}
    command: -type=kafka -h=kafka -p=9092 -t=60
    depends_on:
      - build
      - kafka
